# trigger:
#   - master

variables:
  pyoxidizer_rev: e50a704fc778db9222e70b7ad4b08f68178483b5

jobs:
  - job: "linux"
    pool:
      vmImage: "ubuntu-18.04"
    steps:
      - script: |
          set -e
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain -y
          sudo apt install -y musl musl-tools
          rustup target install x86_64-unknown-linux-musl
          cargo install --git https://github.com/indygreg/PyOxidizer.git --rev $(pyoxidizer_rev) pyoxidizer
          # git clone https://github.com/divvun/divvun-ci-config.git
        displayName: "Install prerequisites"
      - script: |
          set -e
          source $HOME/.cargo/env
          pyoxidizer build --release
          cp build/apps/kbdgen/*/release/kbdgen .
          strip ./kbdgen
        displayName: "Build"
      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/kbdgen"
          artifactName: linux
        displayName: "Publish artifact"

  - job: "macOS"
    pool:
      vmImage: "macOS-10.14"
    steps:
      - script: |
          set -e
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
          source $HOME/.cargo/env
          cargo install --git https://github.com/indygreg/PyOxidizer.git --rev $(pyoxidizer_rev) pyoxidizer
          # git clone https://github.com/divvun/divvun-ci-config.git
        displayName: "Install prerequisites"
      - script: |
          set -e
          source $HOME/.cargo/env
          pyoxidizer build --release
          cp build/apps/kbdgen/*/release/kbdgen .
          strip ./kbdgen
        displayName: "Build"
      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/kbdgen"
          artifactName: macos
        displayName: "Publish artifact"
      # - script: |
      #     set -e
      #     echo "version $(VERSION)"
      #     export PATH="$PATH:$(System.DefaultWorkingDirectory)"
      #     sh divvun-ci-config/repo/scripts/pahkat_deploy_svn.sh https://pahkat.uit.no/repo/macos "$(System.DefaultWorkingDirectory)/$(package_name)" divvunspell-mso $(VERSION)
      #     sh divvun-ci-config/repo/scripts/pahkat_deploy_svn.sh https://pahkat.uit.no/repo/canada-macos "$(System.DefaultWorkingDirectory)/$(package_name)" divvunspell-mso $(VERSION)
      #   displayName: "Deploy to nightly channel"
      #   env:
      #     DEPLOY_SVN_USER: $(svnUser)
      #     DEPLOY_SVN_PASSWORD: $(svnPassword)
      #     DEPLOY_SVN_COMMIT: $(svnCommit)
  - job: "Windows"
    pool:
      vmImage: "windows-2019"
    steps:
      - script: |
          PATH=%PATH%;%USERPROFILE%\.cargo\bin
          curl -sLo rustup-init.exe https://win.rustup.rs/
          ./rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=stable-x86_64-pc-windows-msvc
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cargo install --git https://github.com/indygreg/PyOxidizer.git --rev $(pyoxidizer_rev) pyoxidizer
        displayName: "Install prerequisites"
        # env:
        #   DIVVUN_KEY: $(divvunKey)
      - script: |
          PATH=%PATH%;%USERPROFILE%\.cargo\bin
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          rustup default stable-x86_64-pc-windows-msvc
          pyoxidizer build --release
          cp build/apps/kbdgen/*/release/kbdgen.exe .
        displayName: "Build"
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: "$(System.DefaultWorkingDirectory)/kbdgen.exe"
          artifactName: windows
      # - powershell: |
      #     . .\divvun-ci-config\repo\scripts\PahkatDeploySvn.ps1
      #     $Env:PATH += ";$(System.DefaultWorkingDirectory)"
      #     cd divvunspell-mso\divvunspell-mso
      #     $version = Select-String -Path .\Cargo.toml -Pattern "^version.*=.*$"
      #     $version = $version.Matches[0].Value.Replace('"', '').Replace(' ','').Replace('version=','')
      #     PahkatDeploySvn -SvnUrl https://pahkat.uit.no/repo/windows -Artifact "$(System.DefaultWorkingDirectory)\divvunspell-mso.exe" -Package divvunspell-mso -Version $version
      #     PahkatDeploySvn -SvnUrl https://pahkat.uit.no/repo/canada-win -Artifact "$(System.DefaultWorkingDirectory)\divvunspell-mso.exe" -Package divvunspell-mso -Version $version
      #   displayName: "Deploy to nightly channel"
      #   env:
      #     DEPLOY_SVN_USER: $(svnUser)
      #     DEPLOY_SVN_PASSWORD: $(svnPassword)
      #     DEPLOY_SVN_COMMIT: $(svnCommit)
